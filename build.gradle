import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

plugins {
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.0.0'
    id "com.github.johnrengelman.shadow" version "5.0.0"
}


group 'li.akermann'
version '1.0.0'

repositories {
    mavenCentral()
    maven {
        url  "https://packages.confluent.io/maven/"
    }
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {

    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: "5.4.1"
    implementation group: 'com.typesafe.akka', name: 'akka-stream-kafka_2.13', version: '2.0.7'
    implementation group: 'com.typesafe.akka', name: 'akka-stream_2.13', version: '2.6.14'
    implementation group: 'com.typesafe.akka', name: 'akka-slf4j_2.13', version: '2.6.14'
    implementation group: 'com.typesafe.akka', name: 'akka-http-core_2.13', version: '10.2.4'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'tech.allegro.schema.json2avro', name: 'converter', version: '0.2.10'

    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

jib {
    from {
        image = 'adoptopenjdk/openjdk11'
    }
    to {
        image = project.name
    }
    container {
        jvmFlags = ['-Dconfig.override_with_env_vars=true']
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'li.akermann.KafkaRambler'
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

}

shadowJar {
    transform(AppendingTransformer) {
        resource = 'reference.conf'
    }
    with jar
}